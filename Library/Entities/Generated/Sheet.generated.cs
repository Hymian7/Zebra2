//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v1.3.0.12
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace Zebra.StandardLibrary
{
   /// <summary>
   /// Represents a Sheet Entity
   /// </summary>
   public partial class Sheet
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected Sheet()
      {
         Init();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="part"></param>
      /// <param name="piece"></param>
      public Sheet(global::Zebra.StandardLibrary.Part part, global::Zebra.StandardLibrary.Piece piece)
      {
         if (part == null) throw new ArgumentNullException(nameof(part));
         this.Part = part;

         if (piece == null) throw new ArgumentNullException(nameof(piece));
         this.Piece = piece;


         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="part"></param>
      /// <param name="piece"></param>
      public static Sheet Create(global::Zebra.StandardLibrary.Part part, global::Zebra.StandardLibrary.Piece piece)
      {
         return new Sheet(part, piece);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Indexed, Required
      /// ID of the Sheet Entity
      /// </summary>
      [Key]
      [Required]
      public int SheetID { get; protected set; }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

      /// <summary>
      /// Required{br/}
      /// One Sheet belongs to one Part
      /// </summary>
      public virtual global::Zebra.StandardLibrary.Part Part { get; set; }

      /// <summary>
      /// Required{br/}
      /// One Sheet belongs to one Piece
      /// </summary>
      public virtual global::Zebra.StandardLibrary.Piece Piece { get; set; }

   }
}

