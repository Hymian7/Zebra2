// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zebra.Library;

namespace Zebra.Library.Migrations
{
    [DbContext(typeof(SQLiteZebraContext))]
    [Migration("20210501135122_AddSetlistItemPosition")]
    partial class AddSetlistItemPosition
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("Zebra.Library.Part", b =>
                {
                    b.Property<int>("PartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(35);

                    b.Property<short?>("Position")
                        .HasColumnType("INTEGER");

                    b.HasKey("PartID");

                    b.ToTable("Part");
                });

            modelBuilder.Entity("Zebra.Library.Piece", b =>
                {
                    b.Property<int>("PieceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Arranger")
                        .HasColumnType("TEXT")
                        .HasMaxLength(35);

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Memo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(35);

                    b.Property<string>("Tags")
                        .HasColumnType("TEXT");

                    b.HasKey("PieceID");

                    b.ToTable("Piece");
                });

            modelBuilder.Entity("Zebra.Library.Setlist", b =>
                {
                    b.Property<int>("SetlistID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("SetlistID");

                    b.ToTable("Setlist");
                });

            modelBuilder.Entity("Zebra.Library.SetlistItem", b =>
                {
                    b.Property<int>("SetlistItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("Piece_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Position")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Setlist_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("SetlistItemID");

                    b.HasIndex("Piece_Id");

                    b.HasIndex("Setlist_Id");

                    b.ToTable("SetlistItem");
                });

            modelBuilder.Entity("Zebra.Library.Sheet", b =>
                {
                    b.Property<int>("SheetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("LastUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("Part_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Piece_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("SheetID");

                    b.HasIndex("Part_Id");

                    b.HasIndex("Piece_Id");

                    b.ToTable("Sheet");
                });

            modelBuilder.Entity("Zebra.Library.SetlistItem", b =>
                {
                    b.HasOne("Zebra.Library.Piece", "Piece")
                        .WithMany("SetlistItem")
                        .HasForeignKey("Piece_Id");

                    b.HasOne("Zebra.Library.Setlist", "Setlist")
                        .WithMany("SetlistItem")
                        .HasForeignKey("Setlist_Id");
                });

            modelBuilder.Entity("Zebra.Library.Sheet", b =>
                {
                    b.HasOne("Zebra.Library.Part", "Part")
                        .WithMany("Sheet")
                        .HasForeignKey("Part_Id");

                    b.HasOne("Zebra.Library.Piece", "Piece")
                        .WithMany("Sheet")
                        .HasForeignKey("Piece_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
